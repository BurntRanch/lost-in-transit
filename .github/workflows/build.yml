name: Build LIT (cross-platform)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Install dependencies and SDL3
        run: |
          sudo apt-get update && sudo apt-get purge firefox -y
          sudo apt-get install -y build-essential pkg-config protobuf-compiler libprotobuf-dev cmake libminizip-dev libharfbuzz-dev libshaderc-dev glslang-tools glslc make ninja-build git
          wget https://github.com/libsdl-org/SDL/releases/download/release-3.2.18/SDL3-3.2.18.tar.gz
          tar -xvzf SDL3-3.2.18.tar.gz
          cd SDL3-3.2.18
          mkdir build && cd build
          cmake -G Ninja .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DSDL_UNIX_CONSOLE_BUILD=ON
          ninja
          sudo ninja install
          wget https://github.com/libsdl-org/SDL_ttf/releases/download/release-3.2.2/SDL3_ttf-3.2.2.tar.gz
          tar -xvzf SDL3_ttf-3.2.2.tar.gz
          cd SDL3_ttf-3.2.2
          mkdir build && cd build
          cmake -G Ninja .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DSDL_UNIX_CONSOLE_BUILD=ON
          ninja
          sudo ninja install
          wget https://github.com/libsdl-org/SDL_image/releases/download/release-3.2.4/SDL3_image-3.2.4.tar.gz
          tar -xvzf SDL3_image-3.2.4.tar.gz
          cd SDL3_image-3.2.4
          mkdir build && cd build
          cmake -G Ninja .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DSDL_UNIX_CONSOLE_BUILD=ON
          ninja
          sudo ninja install

      - name: Build and install cglm
        run: |
          git clone https://github.com/recp/cglm.git
          cd cglm
          mkdir build && cd build
          cmake -G Ninja .. \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_INSTALL_PREFIX=/usr/local
          ninja
          sudo ninja install

      - name: Build project
        run: |
          make all CSTD=c2x CXXSTD=c++17

      - name: Make Release
        run: |
          mv build/debug/game lit-game
          cp /usr/lib/x86_64-linux-gnu/libprotobuf.so.*.* ./libprotobuf.so
          echo "#!/usr/bin/sh" > start-game-linux.sh
          echo "LD_PRELOAD=$(pwd)/libprotobuf.so ./lit-game" >> start-game-linux.sh
          tar -zcf lost-in-transit.tar.gz lit-game libprotobuf.so models shaders images AdwaitaMono-Regular.ttf

      - name: Upload to github artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lost-in-transit-linux
          path: ./lost-in-transit.tar.gz

  build-macos:
    name: Build on MacOS
    runs-on: macos-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Install dependencies
        run: |
          brew update
          brew uninstall cmake
          brew install cmake pkg-config make ninja sdl3 sdl3_ttf sdl3_image git protobuf glslang shaderc minizip

      - name: Build and install cglm
        run: |
          git clone https://github.com/recp/cglm.git
          cd cglm
          mkdir build && cd build
          cmake -G Ninja .. \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_INSTALL_PREFIX=/usr/local
          ninja
          sudo ninja install

      - name: Build project
        run: |
          make all

      - name: Make Release
        run: |
          mv build/debug/game lit-game
          tar -zcf lost-in-transit.tar.gz lit-game models shaders images

      - name: Upload to github artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lost-in-transit-macos
          path: ./lost-in-transit.tar.gz

  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Install dependencies
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            git
            patch
            base-devel
            zip
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-minizip
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-make
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-shaderc
            mingw-w64-x86_64-glslang
            mingw-w64-x86_64-protobuf
            mingw-w64-x86_64-sdl3
            mingw-w64-x86_64-sdl3-ttf
            mingw-w64-x86_64-sdl3-image
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-cglm

      - name: Build project
        shell: msys2 {0}
        run: |
          sed -i 's/check_symbol_exists(EVP_MD_CTX_free openssl\/evp.h OPENSSL_NEW_ENOUGH)/set(OPENSSL_NEW_ENOUGH TRUE)/' GameNetworkingSockets/CMakeLists.txt
          make all CSTD=c17 CXXSTD=c++17

      - name: Make Release
        shell: msys2 {0}
        run: |
          mv build/debug/game.exe lit-game.exe
          zip lost-in-transit.zip lit-game models shaders images

      - name: Upload to github artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lost-in-transit-windows
          path: ./lost-in-transit.zip
