name: Release LIT (cross-platform)

on:
  push:
    tags: "*"
    #paths:
      # trigger release workflow only if this file changed
      #- .github/workflows/release.yml

jobs:
  get-version:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - id: version
        run: |
          echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "Tag name from github.ref_name: ${{ github.ref_name }}"
          echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT

  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Install dependencies and SDL3
        run: |
          sudo apt-get update && sudo apt-get purge firefox -y
          sudo apt-get install -y build-essential pkg-config protobuf-compiler libprotobuf-dev cmake libminizip-dev libharfbuzz-dev libshaderc-dev glslang-tools glslc make ninja-build git
          wget https://github.com/libsdl-org/SDL/releases/download/release-3.2.18/SDL3-3.2.18.tar.gz
          tar -xvzf SDL3-3.2.18.tar.gz
          cd SDL3-3.2.18
          mkdir build && cd build
          cmake -G Ninja .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DSDL_UNIX_CONSOLE_BUILD=ON -DSDL_X11=ON -DSDL_X11_SHARED=OFF
          ninja
          sudo ninja install
          wget https://github.com/libsdl-org/SDL_ttf/releases/download/release-3.2.2/SDL3_ttf-3.2.2.tar.gz
          tar -xvzf SDL3_ttf-3.2.2.tar.gz
          cd SDL3_ttf-3.2.2
          mkdir build && cd build
          cmake -G Ninja .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DSDL_UNIX_CONSOLE_BUILD=ON -DSDL_X11=ON
          ninja
          sudo ninja install
          wget https://github.com/libsdl-org/SDL_image/releases/download/release-3.2.4/SDL3_image-3.2.4.tar.gz
          tar -xvzf SDL3_image-3.2.4.tar.gz
          cd SDL3_image-3.2.4
          mkdir build && cd build
          cmake -G Ninja .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DSDL_UNIX_CONSOLE_BUILD=ON -DSDL_X11=ON
          ninja
          sudo ninja install

      - name: Build and install cglm
        run: |
          git clone https://github.com/recp/cglm.git
          cd cglm
          mkdir build && cd build
          cmake -G Ninja .. \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_INSTALL_PREFIX=/usr/local
          ninja
          sudo ninja install

      - name: Build project
        run: |
          make all CSTD=c2x CXXSTD=c++17 DEBUG=0

      - name: Make Release
        run: |
          mv build/debug/game lit-game
          mkdir lib
          ldd ./lit-game | awk '{print $3}' | xargs -i cp {} ./lib
          rm -f lib/{libc.so*,ld-linux-*,libgcc_s.so*,libstdc++.so*,libm.so*}
          echo "#!/usr/bin/sh" > start-game-linux.sh
          tar -zcf lost-in-transit.tar.gz lit-game lib models shaders images AdwaitaMono-Regular.ttf

      - name: Upload to github artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lost-in-transit-linux
          path: ./lost-in-transit.tar.gz

  build-macos:
    name: Build on MacOS
    runs-on: macos-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Install dependencies
        run: |
          brew update
          brew uninstall cmake
          brew install cmake pkg-config make ninja sdl3 sdl3_ttf sdl3_image git protobuf glslang shaderc minizip

      - name: Build and install cglm
        run: |
          git clone https://github.com/recp/cglm.git
          cd cglm
          mkdir build && cd build
          cmake -G Ninja .. \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_INSTALL_PREFIX=/usr/local
          ninja
          sudo ninja install

      - name: Build project
        run: |
          make all DEBUG=0

      - name: Make Release
        run: |
          mv build/release/game lit-game
          tar -zcf lost-in-transit.tar.gz lit-game models shaders images AdwaitaMono-Regular.ttf

      - name: Upload to github artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lost-in-transit-macos
          path: ./lost-in-transit.tar.gz

  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Install dependencies
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            git
            patch
            base-devel
            zip
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-minizip
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-make
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-shaderc
            mingw-w64-x86_64-glslang
            mingw-w64-x86_64-protobuf
            mingw-w64-x86_64-sdl3
            mingw-w64-x86_64-sdl3-ttf
            mingw-w64-x86_64-sdl3-image
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-cglm

      - name: Build project
        shell: msys2 {0}
        run: |
          sed -i 's/check_symbol_exists(EVP_MD_CTX_free openssl\/evp.h OPENSSL_NEW_ENOUGH)/set(OPENSSL_NEW_ENOUGH TRUE)/' GameNetworkingSockets/CMakeLists.txt
          make all CSTD=c17 CXXSTD=c++17 DEBUG=0

      - name: Make Release
        shell: msys2 {0}
        run: |
          mv build/release/game.exe lit-game.exe
          cp /mingw64/bin/SDL3.dll .
          cp /mingw64/bin/SDL3_image.dll .
          cp /mingw64/bin/SDL3_ttf.dll .
          cp /mingw64/bin/libabsl_*.dll .
          cp /mingw64/bin/libbrotlicommon.dll .
          cp /mingw64/bin/libbrotlidec.dll .
          cp /mingw64/bin/libbz2-1.dll .
          cp /mingw64/bin/libcrypto-3-x64.dll .
          cp /mingw64/bin/libfreetype-6.dll .
          cp /mingw64/bin/libgcc_s_seh-1.dll .
          cp /mingw64/bin/libglib-2.0-0.dll .
          cp /mingw64/bin/libgraphite2.dll .
          cp /mingw64/bin/libharfbuzz-0.dll .
          cp /mingw64/bin/libiconv-2.dll .
          cp /mingw64/bin/libintl-8.dll .
          cp /mingw64/bin/libpcre2-8-0.dll .
          cp /mingw64/bin/libpng16-16.dll .
          cp /mingw64/bin/libprotobuf.dll .
          cp /mingw64/bin/libstdc++-6.dll .
          cp /mingw64/bin/libutf8_validity.dll .
          cp /mingw64/bin/libwinpthread-1.dll .
          cp /mingw64/bin/zlib1.dll .
          zip -r lost-in-transit.zip lit-game.exe *.dll models shaders images AdwaitaMono-Regular.ttf

      - name: Upload to github artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lost-in-transit-windows
          path: ./lost-in-transit.zip

  release:
    name: Create GitHub Release
    needs: [build-linux, build-macos, build-windows, get-version]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      release-url: ${{ steps.create-release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create-release
      uses: ncipollo/release-action@v1.14.0
      with:
        tag: ${{ needs.get-version.outputs.version }}
        name: Lost In Transit ${{ needs.get-version.outputs.version }}
        draft: false
        allowUpdates: true
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}

  upload-binaries:
    name: Upload binaries to GitHub Release
    runs-on: ubuntu-latest
    needs: [release, get-version]
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4

      - name: tree that thing
        run: sudo apt install tree -y && tree

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release-url }}
          asset_path: lost-in-transit-linux/lost-in-transit.tar.gz
          asset_name: lit-game-linux-${{ needs.get-version.outputs.version }}.tar.gz
          asset_content_type: application/gzip

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release-url }}
          asset_path: lost-in-transit-macos/lost-in-transit.tar.gz
          asset_name: lit-game-macos-${{ needs.get-version.outputs.version }}.tar.gz
          asset_content_type: application/gzip

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release-url }}
          asset_path: lost-in-transit-windows/lost-in-transit.zip
          asset_name: lit-game-windows-${{ needs.get-version.outputs.version }}.zip
          asset_content_type: application/x-zip-compressed
